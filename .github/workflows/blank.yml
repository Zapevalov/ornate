name: CI

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Publish artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # If we split on '/' and take the 3rd value,
        # we can get the release name.
        run: |
          echo "GITHUB_REF ##: ${GITHUB_REF##*/}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
  #        ./gradlew -Pversion=${NEW_VERSION} publish
  
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          
      - name: Build base image
        run: |
          echo $SOURCE_NAME
          echo $SOURCE_BRANCH
          echo $SOURCE_TAG
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
  
#       - name: Extract branch name
#         shell: bash
#         id: extract_branch
#         run: | 
#           echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/tags/})"
  
#       - name: Extract tag name
#         uses: actions/github-script@0.2.0 
#         id: tag
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           script: |
#             return context.payload.ref.replace(/\/refs\/tags\//, '');
      - name: Echo
        run: |
          echo "tag: ${{ steps.tag.outputs.result }}"
          echo "branch: ${{ steps.extract_branch.outputs.result }}"
